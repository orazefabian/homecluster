velero:
  # Add the AWS plugin for S3 compatibility
  initContainers:
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.8.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  # Default backup storage location settings
  backupsEnabled: true
  snapshotsEnabled: true
  
  # Deploy node agent for volume backups
  deployNodeAgent: true
  nodeAgent:
    privileged: true  # Need privileged mode for accessing volumes
    resources:
      requests:
        cpu: 500m
        memory: 512Mi
      limits:
        cpu: 1000m
        memory: 1024Mi
    podVolumePath: /var/lib/kubelet/pods
    namespaces:
      - halo

  # Configure backup storage location using Hetzner's S3-compatible storage
  configuration:
    defaultVolumesToFsBackup: true
    backupStorageLocation:
      - name: default
        provider: aws
        bucket: backup-halo-store  # Replace with your actual bucket name
        prefix: ""
        config:
          region: eu-central
          s3ForcePathStyle: true
          s3Url: https://fsn1.your-objectstorage.com  # Hetzner S3 endpoint
    volumeSnapshotLocation:
      - name: default
        provider: aws
        config: {}
  
  # Environment variables
  extraEnvVars:
    - name: TZ
      value: "Europe/Berlin"
  
  # Use existing credentials secret
  credentials:
    useSecret: true
    existingSecret: velero-s3-credentials
    
  # Configure backup schedules
  schedules:
    monthly-backup:
      disabled: false
      schedule: "0 1 1 * *"  # Monthly on the first day at 1 AM
      useOwnerReferencesInBackup: false
      template:
        includedNamespaces:
          - halo  
        ttl: 1440h  # 60 days retention
        includeClusterResources: true
        storageLocation: default
        includedResources:
          - '*'
        excludedResources:
          - nodes
          - events
          - events.events.k8s.io
          - backups.velero.io
          - restores.velero.io
        snapshotVolumes: false  # Changed to false to use restic for volume backups
        defaultVolumesToFsBackup: true  # Use filesystem backup for volumes
        labelSelector: {}  # Remove label selector to include all resources

  # Resource limits and requests
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1024Mi
  
  # Use existing service account
  serviceAccount:
    server:
      create: true
      name: velero

  # Configure dashboard ingress
  dashboardEnabled: true
  ingress:
    enabled: true
    hosts:
      - host: velero.halo.fabseit.net
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: local-fabseit-net-velero-prod-tls
        hosts:
          - velero.halo.fabseit.net
    annotations:
      kubernetes.io/ingress.class: nginx