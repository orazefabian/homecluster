apiVersion: v1
kind: Namespace
metadata:
  name: secrets-backup
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secrets-backup
  namespace: secrets-backup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secrets-backup-reader
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list"]
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secrets-backup-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secrets-backup-reader
subjects:
- kind: ServiceAccount
  name: secrets-backup
  namespace: secrets-backup
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: secrets-backup
  namespace: secrets-backup
spec:
  # Run daily at 2 AM
  schedule: "0 2 * * *"
  # Keep last 3 successful jobs and 1 failed job
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: secrets-backup
          containers:
          - name: backup
            image: skatefabse/k8s-secrets-backup:arm-latest
            imagePullPolicy: IfNotPresent
            command:
            - python
            - /app/backup_secrets.py
            - /secrets/secrets_backups
            volumeMounts:
            - name: nfs-backup
              mountPath: /secrets
            resources:
              requests:
                memory: "128Mi"
                cpu: "100m"
              limits:
                memory: "256Mi"
                cpu: "200m"
            env:
            - name: TZ
              value: "Europe/Berlin"  
          volumes:
          - name: nfs-backup
            nfs:
              server: 192.168.8.98  
              path: /mnt/backup-data 
              readOnly: false
          restartPolicy: OnFailure